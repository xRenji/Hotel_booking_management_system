@page
@model ThreeSistersHotel.Pages.SearchRoomsModel
@{
    ViewData["Title"] = "SearchRooms";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Search Rooms</h1>

<div class="row">
    <div class="col-md-6">
        @* by default, a method="post" form will be rendered. *@
        <form asp-action="SearchRooms">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="SearchInput.BedCount" class="control-label">Number of beds</label>
                <select asp-for="SearchInput.BedCount">
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                </select>
                
            </div>
            <div class="form-group">
                <label asp-for="SearchInput.CheckIn" class="control-label"></label>
                <input asp-for="SearchInput.CheckIn" class="form-control" />
                <span asp-validation-for=" SearchInput.CheckIn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SearchInput.CheckOut" class="control-label"></label>
                <input asp-for="SearchInput.CheckOut" class="form-control" />
                <span asp-validation-for="SearchInput.CheckOut" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Compare" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@* Check this page is requested by 'get' or 'post' method.
    If 'post', then display the comparison results. *@
@if (Model.DiffRooms != null)
{
    <div>
        <hr />
        @if (Model.DiffRooms.Count == 0)
        {
            <h4>
                There is no room available.
            </h4>
        }
        else
        {
            <table class="table">
                <!-- .table is a Bootstrap class giving table styles -->
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.DiffRooms[0].ID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DiffRooms[0].Level)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DiffRooms[0].BedCount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DiffRooms[0].Price)
                    </th>
                </tr>

                @foreach (var item in Model.DiffRooms)
                {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Level)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BedCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
            </tr>
                }
            </table>
        }
    </div>
}

@* Inlcude JavaScript for client-side vaildations.*@
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


